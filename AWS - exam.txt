I. SERVICES
II. VPC
III. VPN
IV. RDS
V. MONITORING
VI. MIGRATION
VII. OTHER KNOWLEDGES
VIII. FAQs
IX. PRACTICE
X. GENERAL WTFs

I. ---------------------------------------------------------- SERVICES ----------------------------------------------------------

1. AWS
	a. Sell in bulk -> Cheaper if use
	b. 3 Model of Cloud Computing
		- IaaS (Infra)
			Người dùng quản lý app, runtime, secure và db v..v..
		- PaaS (Platform)
			người dùng ko cần biết đến quản lý infra.
		- SaaS (Software) 
			Người dùng chỉ cần biết cách sử dụng app, còn lại méo care j nữa. Ví dụ là salesforce
		
2. EC2: Có 3 loại instance dựa vào giá
		- On demand: Loại mặc định, co giãn dc, nhưng mà mắc
		- Reserved Instance: Loại biết trc cấu hình, nhu cầu tăng giảm 1 cách cụ thể vào thời gian nào, có thể trả tiền trc hoặc ko.
		- Spot instance: đấu giá, thằng nào nhanh tay thì lượm. 
	a. Có thể hibernation instance, tuy nhiên phải setting điều này lúc khởi tạo. Console hay CLI đều dc 
	b. Có thể đổi instance type, tuy nhiên phải stop service đã :))
	c. EC2ConfigService ?
	
	f. Placement Group 
		Chia làm 3 types:
			+ Cluster: Tăng tốc độ giữa các instance. Tối đa 10Gb cho các bé. Ko recommend mix instance's type. -> chỉ nằm trong 1 AZ
			+ Partition: Hỗ trợ tối đa 7 partition trong mỗi zone (Dedicated Instances thì chỉ có 2 thôi). Số lượng EC2 instance ném vào tùy thuộc vào limit của acc. PARTITION đảm bảo instance trong 1 partition ko share underlying hardware với instance trong 1 partition khác. -> span over AZ
			+ Spread: dễ hiểu nhất, mỗi ông 1 rack, ko lquan đến nhau về network speed hay power source. Tối đa 7 instance Spread trong mỗi zone (ví dụ trong zone A chỉ có 7 con instance trong 1 Spread. Sử dụng hoặc tạo thêm 1 spread nếu muốn apply cho hơn 8 instance. Éo ảm báo sự pread giữa các instance. Có thể mix các instance với nhau.
		- Anh em lưu ý là chỉ có thể add instance vào placement group khi khởi tạo chứ ko thể cho 1 instance đã tồn tại vào được.
	g. SSD bao gồm 2 loại: 
		+ General Purpose SSD (gp2)  - Có khả năng burst IO -> Tích lại credit và dùng khi cần
			Ổ trên 1TB thường có baseline > burst performance nên thường méo cần burstmode( >3000 IOPS )
		+ Provisioned IOPS SSD (io1) 
	
	h. 1 vài EC2 instance đã có sẵn local storage built-in gọi là instance store. Data trong instance store này là ephemeral -> terminate instance cái là đi luôn.

	i. 1 EC2 có thể có nhiều IPs sử dụng nhiều Network Interface

3. Lambda
	a. Run code without provisioning 
	b. Lambda is not fit for running long time- function, Tối đa 5p thôi
	c. Hẹn giờ tắt/ mở EC2
		- Tạo 1 policy có quyền start/ stop trên IAM
		- Tạo 1 role cho Lambda, gán policy vừa tạo vào
		- Tạo Lambda function, gán role vừa tạo
		- Kết nối vs Cloudwatch để execute Lambda function (EventBridge)
	d. Các event có thể invoke Lambda
		- AWS DynamoDB
		- SQS
		- SNS
		- Cloudwatch Event
		- API Gateway 
		- IOT
		- Kinesis
		- CloudWatch Logs	
		- S3
	
4. LightSail
	For small businesses, need virtual private server. low-cost
	Launch Virtual Machine (VM)
	Attach Solid State Drive (SSD)
	Manage the IAM
	Generate security groups
	Setup the DNS
	Create the static IP
	
5. EBS, EFS
	a. EBS - RAID (redundant array of independent disks) kĩ thuật lưu trữ dữ liệu sử dụng sự kết hợp nhiều disks
		- RAID 0: Striping. Tăng cường I/O performance, tuy nhiên I/O sẽ distribute toàn volume 1 cách đồng đều, dữ liệu cùng thế
		- RAID 1: Mirroring. Ko tăng cường I/O performance, thay vào đó là khả năng ghi vào nhiều volume đồng thời cùng lúc. Khả năng lưu sẽ bị cắt 1 nửa vì phải lưu đến 2 bản ghi dữ liệu giống nhau cùng lúc
		- Snapshot của 1 EBS luôn luôn dc encrypted, nếu share 1 snapshot thì cũng đồng nghĩa share luôn CMK dùng để encript của nó
		- EBS is not ephemeral, tuy nhiên nếu terminate 1 instance thì vẫn có khả năng mất đi ?
		
	b. Nên phân biệt dc S3, EBS, EFS
	- S3: 1 kho object, truy cập dữ liệu từ mọi region, zone, rẻ hơn so vs EBS, có thể deploy web tĩnh
	- EBS: lưu theo 1 block, phải gắn với 1 instance EC2, chỉ tồn tại trên 1 vùng
	- EFS:  Vì chỉ chứa file system nên nhiều instance EC2 có thể truy cập vào 1 EFS, đắt. Chỉ hố trợ encription khi tạo. 
		+ EFS chỉ hoạt động tại 1 VPC tại 1 thời điểm
	 
	c. Muốn chuyển định dang 1 EBS (io, gp, sc, st)
	- Thì ko cần phải stop instance.
	- Tuy nhiên nếu là root volume thì phải dừng
	
	A gp2 volume that is attached to an instance as a root volume can't be modified to an st1 or sc1 volume. If detached and modified to st1 or sc1, it can't be re-attached to an instance as the root volume.
	
	d. Khi start/stop thì dữ liệu trên EBS sẽ ko mất. Tuy nhiên nếu ko setting DeleteOnTermination thì khi terminate/ reboot nó sẽ teo!!
	
6. AWS Firewall Manager / AWS Shield
	- Quản lý connect đến Gateway API, CloudFront hay LoadBalancer.
	- Với WAF có thể chặn dc IP, value từ request header, SQL, number request v...v...
	- AWS Shield chặn ddos cho EC2, ELB hay CloudFront (tốn tiền, ko có tiền học =)))
	- Shield Standard có thể chống dc ddos, vs Shield Advanced thì có thể protect ở ELB, CLF và Route 53.
	a. Cross site
	b. IP match
	c. GEO
	d. Size length
	e. SQL Injection
	f. String request
	g. Regex
	h. Tất cả những điều kiện trên bổ sung thêm rate-based request.
	 Nếu 1 request vượt quá 1 mức khai báo (2000 request/5m) thì bloc cmnl
	
7. Route53
	a. Có 2 cách để trỏ domain, thay đổi nameserver và DNS ??
	b. Hosted Zone.
	 Container holds information about how u want to route traffic on the Internet for a specific domain.
	c. Route53 hỗ trợ health check ở rất nhiều nơi toàn thế giới. 
	d. Weight
		-> Hỗ trợ nested routing
	e. When calamity happens, consider a whole region gone KABOOM, not only 1 AZ -> Use Route53 to route..
	f. Record Type:
		A (address record)
			Địa chỉ IPv4: 192.0.2.1
		AAAA (IPv6 address record)
			Địa chỉ IPv6: 2001:0db8:85a3:0:0:8a2e:0370:7334
		CNAME (canonical name record)
			domain to subdomain. VD -> hostname.example.com
			hoặc là alias
			hoặc là 1 domain khác
		CAA (certification authority authorization)
			khó vl
		MX (mail exchange record)
			Ví dụ: 10 mail.example.com (priority + domainname của mail server)
			Có thể route đến nhiều server với độ priority khác nhau, vd namecheap và 365
		NAPTR (name authority pointer record)
			khó vl
		NS (name server record)
		
		PTR (pointer record)
		SOA (start of authority record)
		SPF (sender policy framework)
		SRV (service locator)
		TXT (text record)
	
		- Public hosted zone và private hosted zone
			+ Public: route traffic on the internet
			+ Private: route traffic within VPC
		
		- Có thể sử dụng Route53 to route policy and Blue/Green deployment
		
		- Khi switch registrar. 
			+ Ví dụ: domain đăng kí ở AWS, host lại nằm ở Vultr. 
			-> Lấy NS của Vultr (vì địa chỉ IP của host nằm ở Vultr, trên DNS của Vultr có A record ghi IP của host)
			-> Thay đổi [NS Record] của Route 53 và [Domain's nameserver] -> Chờ theo TTL 
			-> TTL: Value cache giá trị của NS trên DNS, bình thường là 2 ngày. Sau khi change NS ổn định (test bằng cách để TTL thấp ~60) -> chuyển sang 2 ngày
			-> Khi chuyển NS, thì các record của tên miền sẽ mặc định nằm trên máy chủ của DNS mới
			https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/domain-name-servers-glue-records.html
			
	g. Sử dụng Route 53 resolver để foward queries via Direct Connect đến On-premise DNS server. Sử dụng khi cần để connect instance trên on-premise với instance của VPC
	h. Nếu ko bỏ healthcheck, thì Route53 vẫn tiếp tục forward đến các endpoint cũ (dù cho bỏ đi hay ko). Healthcheck dc tạo riêng và associate với record set khi tạo.
	
8. WAF
	OWASP ?? 
	1 Rule cung cấp bởi AWS
9. S3 
	a. Data transfer via SSL using IAM
	b. Sử dụng phối hợp với CloudFront -> tăng tốc độ distribute , minimize network latency
	c. Can archive old file to Glacier sử dụng life cycle sau 1 thời gian
	d. Tạo private repository như GIT trên S3
	e. Ko có cơ chế object loking, thằng nào đi trước thì thắng. 
	f. Cách thay đổi tên và folder trong bucket có ảnh hưởng đến tốc độ truy xuất và partition
	g. Sử dụng hex hask key để maximize partition (67891234 và 67891233 đều bắt đầu bằng 6 nên 1 là reverse lại, 2 là dùng hex hash key)
	h. S3 dc tạo trên 1 region tiền định và ko leave region đó. Có thể transfer object sang region khác.
	i. Mã hóa sử AES 256 và AWS - KMS. 
		https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html
	k. Giới thiệu new storage class: Intelligent-Tiering. Khi 1 file ko sử dụng quá 30 ngày -> IA, và khi nó dc sử dụng -> Standard.
	l. Độ durable của IA và RRS: IA (99.9999999999) RRS(99.99)
	m. Dùng multi part upload để upload file trên 5GB
	n.  File Gateway. 1 cái app hay kiểu thế để truy cập S3 từ on-premise.
	i. Eventual Consistency: Nhất quán theo kiểu cuối cùng kiểu j cũng dc cập nhật thôi -> node2 data có thể là stale data. 
	h. Strong Consistency: Nhất quán 1 cách mạnh mẽ, khi 1 file dc update -> đến lúc update toàn bộ node hoàn thành -> ko access nào lấy dc file 
	k. 1 single Put request -> chỉ có thể upload 1 file max 5Gb. Dùng multi-part upload -> 5TB
	l. pre-sign URL -> Cách tốt nhất để cho quyền tạm thời. https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html
	
	REPLICATION
		- Files in an existing bucket are not replicated automatically but all the subsequent updated files will be automatically replicated.
		Sau khi thiết đặt REPLICATION, các file hiện tại trong source bucket ko dc replication mà chỉ những file mới dc upload hoặc subsequent updated file ms dc replicate thôi.
		
	Quy trình up/get ảnh sử dụng S3 và CORS
		1. Public bucket:
			- Up lên là ko đủ, phải chỉnh cả bucket policy nữa
		
10. CloudFront.
	a. Content Delivery Network (CDN)
	b. caches copy of your content "close" to your viewer.
	c. ensure end-user request are served by closest edge location
	d. protect against DDOS
	e. Có thể sử dụng để distribute software (vì donw nó nhanh)
	f. Hoặc stream video
	g. 3 vị trí: Orgin WEB SERVER -> Regional Edge Location -> Cloud Front (nearest Edge Location)
	h. Có thể chặn luôn quốc gia mà ko cần qua WAF
	i. Signed URL, Signed Cookie
		- Để sử dụng dc, phải tạo CloudFront Keypair ở Security Credetial của User (root user nhé, lom dom ko tạo dc). 
		- Sử dụng CLI để tạo 
		- Canned Policy
			-> Chỉ có thể giới hạn ngày giờ tới hạn sử dụng của 1 resource
		- Custom Policy
			-> Ngày bắt đầu, sử dụng. IP range nào có thể sử dụng, ngày tới hạn, based-encode của policy -> link dài hơn
			
		cách thiết lập default hoặc custom certificate, tích hợp Lambda Edge vào request lifecycle, improve cache hit ratio 
	k. U can make the on-premise load balancer as the custom origin of the CL distribution

11. IAM
	Hiểu đơn giản, 1 accout có thể thuộc 1 hoặc nhiều group, 1 group có thể có 1 hoặc nhiều policies. Policy có 1 danh sách và có thể tạo ra custom policy. End game. 		
		Policy có 2 type:
			AWS Managed Policies
			Custom Managed Policies
	a. If you have an app running on EC and it need to access other AWS services. -> The best way is to provide credential to the app running on EC2 by using IAM roles.
	b. Always enable Cloudtrails để xem mấy thằng user nó đang làm cái éo j. Chuyển log vào S3
	c. User - Group - Policy đi vs nhau. 
	d. Role 1 mình chơi 1 kiểu, tự tạo permisson, tự gán short-term cho 1 thánh ??
	e. Understand IAM Web Identity & Federation
		- Tránh việc sử dụng user&access key. 
		- User sẽ signin sử dụng IDP(Idenity Provider). 
		- Người dùng sẽ nhận dc authen token -> exchange token này sang temporary security credential. 
		- Sử dụng Coginito để đóng vai trò như 1 Idenity Broker
	f. Certificate
		- Cho những Region ko hỗ trợ ACM thì Certificate bắt buộc phải sử dụng IAM để quản lý.
		-> Nó ko nhìn dc trên Console đâu, phải dùng CLI ;_;)
	
	g. AssumeRole:
		- Có 1 case study thế này, tạo 1 CrossAccount Role cho thằng vào để nó dùng resource làm cái éo j đó
		-> Xong nó vào xóa mie VPC hay S3 bucket j đó 
		-> Phải trail logs từ cả 2 account
		-> Từ account của thằng đấy sẽ phát sinh userIdenify và sharedEventID 
		-> Từ đây có thể trail ra thằng nào đã xóa
	h. Deny luôn có độ priority lớn hơn là rõ ràng, tuy nhiên nếu ko muốn deny hoàn toàn, hãy sử dụng NotAction
		
	
	
12. Auto Scaling 
	a. Phải khởi tạo 1 launch configuration trc khi tạo 1 Auto SCaling group. ASgroup sẽ chạy dựa trên launch configuration này. Khi 1 lc bị xóa (lc ko thể sửa) thì ASgroup sẽ tự động update thông tin EC2 dựa trên lc mới. ví dụ lc là 4 instance C4, sau đó xóa lc và update thành C4-extra -> Những instance EC2 từ đó về sau sinh ra sẽ chỉ dựa trên lc này.
	b. Sử dụng Auto Scaling policy để scale theo schedule.
	c. Sử dụng AWS SNS để gửi notifi qua HTTP hoặc HTTPS 
	d. Simple Scaling Policies
		- Tăng, giảm, mỗi nấc tăng bn tự điều chỉnh
	e. Target Traking Policies
		- Chỉ cần chốt 1 target value, hệ thống sẽ tự động up/down để maintain cái chỉ số ấy
	f. Chọn nhiều subnet khi tạo ASG để nó chạy sang nhiều AZs
	g. Instance warm-up: Set thời gian để cho đến khi instance hoàn toàn dc warmup thì mới count vào metric -> scale. Kiểu mới vào cần thời gian thở ấy, ko thì ko tính.
	h. Cooldown -> như skill thôi, cần cooldown xong mới scale tiếp dc. Tuy nhiên việc này chỉ áp dụng dc trong simple scale
		-> Có thể hoàn toàn ignore cooldown bằng cách scale thủ công, schedule hoặc 1 instance trở nên unhealthy.
	i. Add Life Cycle Hook to Auto Scaling group => Nó như 1 eventAction xảy ra khi 1 life cycle event of AutoScaling phát sinh. 
		-> Ví dụ: put the instance into wait state before termination khi Scale in -> chặn việc loss data đồng bộ
	k. Suspend Process. Cơ chế hủy bỏ 1 AG khi fail to tạo instance quá 24h 
		AZRebalance
		- Cân bằng số lượng instance các EC2 giữa các A-Z
		Health check
		...
	
13. Elastic Load Balancer.
	a. Application Load Balancer is best suited for load balancing of HTTP and HTTPS traffic
	b. Network Load Balancer is used to distribute the traffic or load using TCP/UDP/TLS protocols
		- Có thể route traffic tới nhiều port trên 1 instance
		- Thích hợp với sử dụng ECS
	d. Classic Load Balancer provides basic load balancing across multiple Amazon EC2 instances. 
	e. Với bọn Java mất dạy hay có trò cache server IP vào DNS thì load-balancer nó sẽ ko balance cho lắm nữa. Nên từ đấy ta có thể dùng cross-zone load balancing. (chỉ cần config khi sử dụng classic LB)
	f. Quyết định LB là external hay internal -> khai báo lúc khởi tạo LB
	g. Application Load Balancer có thể tích hợp được với WAF để filter IP hoặc so on
		- ALB chỉ hỗ trợ HTTP/ HTTPS
	h. Sử dụng sticky session (hoặc là session affinity) để dính 1 user-session vào 1 target. Để làm đc điều này thì user cần cung cấp coookie
		- Enable cái này ở edit attributes ở Target Group.
		
	i. When you use HTTPS or SSL for your front-end listener, you must deploy an SSL certificate on your load balancer. 
	The load balancer uses the certificate to terminate the connection and then decrypt requests from clients before sending them to the instances.
	You must also specify a security policy. Elastic Load Balancing provides security policies that have predefined SSL negotiation configurations, 
	or you can create your own custom security policy. If you configured HTTPS/SSL on the back-end connection, you can enable authentication of your instances.
	
	-> Deploy SSL ở load balancer level -> OK sẽ giúp web có https tuy nhiên nó sẽ terminate connection, decript request và gửi về instance.
	-> Nếu muốn config SSL ở backend connection thì có thể enable backend authen và phải cung cấp cert -> Cái này chỉ mới thấy ở classic LB, chưa thấy ở Application
	https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-create-https-ssl-load-balancer.html#create-https-lb-console
	
	g. SNI - Server Name Indicator: handle separate SSL cert for each device plaform
	- Có thể add nhiều cert vào 1 ELB
	h. Khi 1 con AMI mới đc tạo và add vào ELB có vấn đề, việc cần làm là health check kĩ, tiếp đến là nếu ko ổn thì associate lại với launch configuration cũ.
	
	i. Usecase (LuckyDraw) 
		Listener (HTTPS-443) Tuy nhiên forward về instance qua HTTP cổng 80.
		Cách này để sử dụng SSL của ELB mà ko cần cài đặt cert trên server. 
		
	l. TPC: In this example, we named the process https because it listens to secure (HTTPS) traffic. The listener sends traffic to the process on the designated port using the TCP protocol, because a Network Load Balancer works only with TCP. This is okay, because network traffic for HTTP and HTTPS is implemented on top of TCP.
	
	k. end-to-end connection: 
		- Vì sao phải cần ? Vì connection between ELB và backend trong 1 private VPC chưa chắc đã an toàn nếu dùng cổng 80 ??? Thế éo nào mà vẫn chưa an toàn dc nhỉ
		- END-TO-END nó sẽ nằm ở 2 đầu
			+ Listener của ELB - set ACM
			+ Target group - self ecripted
		A Secure SocketsLayer (SSL) certificate managed by AWS Certificate Manager (ACM) on the load balancer to encrypt all traffic between the internet and the load balancer. Separateself-signed certificatesaregenerated on the EC2 instancesto encrypt traffic between the load balancer and the application instances.
		-> same private key and certificate để tạo ACM và self cert
		https://faun.pub/end-to-end-ssl-encryption-with-aws-application-load-balancer-b43db918bd9e
		https://aws.amazon.com/blogs/containers/maintaining-transport-layer-security-all-the-way-to-your-container-using-the-application-load-balancer-with-amazon-ecs-and-envoy/
		https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/configuring-https-endtoend.html
	
		- Có vẻ như dùng Network và Application LB mang lại kq khác nhau ? cần test...
	
	
	
14. AWS SQS (Simple Queue Service) 
	a. Có 2 loại: Standard và FIFO
	b. Standard: Default type, best-effort ensuring that every messages are delivered the same order they're sent. 
		- near unlimited transaction.
	c. FIFO: First In, First Out. 300 transaction per/ sec 
	d. Tối đa 1 tin là 256Kb
	e. Delivery Delay. Thời gian gửi chậm đến consumer sau khi vào queue. Ko ảnh hưởng đến standard, tuy nhiên affect hoàn toàn FIFO
	
	f. SQS cũng là một topic sẽ được hỏi nhiều thứ chi tiết liên quan đến DelaySeconds, hay 
	g. Gửi từ SNS -> SQS (SQS hỗ trợ chức năng subscribe ngược)
	h. SQS ko encript data by default, muốn dùng phải enable lên 
	i. Receive message Wait Time ~ Long Polling
		-> Long polling -> Chờ đến khi nào có mess để gửi thì thôi.
	k. VisibilityTimeout. 
		-> Basically the time taken by the consumer to process the message -> Khó hiểu vãi lol
		-> Thay vì thế, chỉ cần nói là sau khi message này được nhận, nó sẽ bị ẩn 1 tgian là VisibilityTimeout cho đến khi hiện lại để cho thằng consumer khác poll
	l. DeliveryDelay.
		-> Ẩn message sau khi gửi cho đến khi hết delaySecond -> Thì người dùng mới có thể poll dc 
	m. For an SQS FIFO queue, all the messages with the same Message Group Identifier will be delivered in order. 
		Messages with different message group ID values might be sent and received out of order.
	n. Có thể sử dụng JAVA SDK để config visibility timeout cho riêng 1 vài message ??
	
	
15. Cognito 
	Có 2 thứ
	a. Identity Pools
		- Sử dụng để giúp user có quyền hạn truy cập vào AWS resources
		- Cycle của 1 idenity pool sẽ là như này:
			-> Webapp gửi authen token tới Cognito (token này có thể tới từ các IDP như Facebook, Google)
			-> Cognito exchange token này với AWS credential
			-> User sử dụng temporary credential này để truy cập vào AWS resources
	b. User Pools
		- User Pools để chứa user directories (sign-in, sign-out) trong khi Identity Pools để chứa credential truy cập vào AWS service
		- Cycle của 1 user pool sẽ là như này:
			-> User signin qua Cognito
			-> User pool redirect post back này tới các Federating IDP khác (Google, Facebook)
			-> Trả về authen token cho người dùng 
			-> Người dùng sử dụng token này để (exchange với identiy pool) truy cập vào API Gateway các kiểu
			
	c. Sync data between many device of 1 user
	
	d. Cách 1 API Gateway integrate với Cognito https://awskarthik82.medium.com/part-1-securing-aws-api-gateway-using-aws-cognito-oauth2-scopes-410e7fb4a4c0
	
16. Batch
	Batch sử dụng job queue thay vì SQS

	
17. AWS SNS (Simple Notification Service)
	a. Tạo topic -> Tạo policies (Who can publish messages aka publisher to all who wanna receive these messages aka subscriber) 

18. AWS Step functions SWF (Simple WorkFlow)
	- Đúng như tên, tạo ra 1 State Machine với các Lambda function là các node, có thể chạy song song, chờ, trả về kq v..v..
	
19. AWS OpsWork
	Bao gồm 3 thành phần
	a. Chef
	b. Stacks
	c. Puppet
	
	
20. Mapreduce 
	-> Distribute the computation of data over multiple Amazon EC2 instance
	-> Nghiên cứu tìm cách chuyển dữ liệu SQL sang Mapreduce trên Spark/ Hadoop
	
21. CloudFormation
	a. Bạn xác định tất cả các tài nguyên mà bạn muốn AWS bật lên trong một bản thiết kế chi tiết, bấm vào một nút, và sau đó AWS sẽ thực hiện giúp bạn phần việc còn lại. Bản thiết kế này được gọi là một template trong CloudFormation. CloudFormation đảm bảo rằng các tài nguyên phụ thuộc trong template của bạn đều được tạo theo đúng thứ tự. Ví dụ, giả sử chúng ta muốn tạo record DNS Route53 và một instance EC2 có record DNS trỏ tới instance EC2. CloudFormation sẽ để cung cấp instance EC2 trước, chờ cho nó sẵn sàng được sử dụng, và sau đó tạo bản ghi DNS. AWS CloudFormation điều phối việc cung cấp các tài nguyên mong muốn. Vì vậy, thay vì phải viết script với một loạt các lời gọi API AWS, chờ vòng lặp và thử lại logic, bạn chỉ cần mô tả những gì bạn muốn và yêu cầu CloudFormation thực hiện điều đó cho bạn
	- stacks ?
	- layer (1 for java, 1 for node.js)
	- recipe (for DynamoDB)
	
22. BeanStalk
	- Là 1 SaaS
	- Khác vs Lambda tính phí theo thời gian chạy code thì BeanStalk tính phí theo resource chứa code.
	- Nó giống với LightSail
	- CI/CD với CodePipeline, CodeBuild lifecycle hook, CodeDeploy, Blue/Green deployment on ElasticBeanstalk…

23. API Gateway
	- API KEYs: Tạo key -> Có mới có thể truy cập dc API Gateway
	- Usge Plan: Tạo plan để cấp cho người dùng và thống kê khả năng sử dụng. Nhiều Api Gateway có thể sử dụng chung 1 plan
	
24. KMS
	Supports 2 kind of keys: master and data keys
	- Data key: encrypt and decrypt actual data
	- Master key: protect ( encrypt, decrypt ) data key và some data up to 4Kb
	Flow sẽ là thế này:
	1. Client calls ksm:GenerateDataKey by passing ID of the KMS master key
	2. Request is authenticated!
	3. 1 data key (được mã hóa với masterkey) sẽ dc sinh ra
	4. key dưới dạng plaintext và encryped sẽ được bắn về lại customer
	5. dữ liệu khứa sẽ được mã hóa bằng plaintext key -> plaintext key này sau đấy sẽ dc xóa
	6. encrypted data key được lưu trữ và bắn về lại KMS khi cần decrypt dữ liệu
	Tương tự với asymmetric key. Tuy nhiên lúc ấy public key sẽ dùng để encrypt và plaintext private key dùng để decrypt
	https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html
	a. KMS hỗ trợ encript tối đa là 4Kb, nếu nhiều hơn thì sử dụng Envelope Encription
	
25.  AWS Glue 
	-> Sử dụng để phát hiện, extract và transform and load data (ETL)
	-> Sử dụng cho ML
	-> Tích hợp với Athena -> SQL analytic
	a. Có sẵn Glue Data Catalog để phân tích dữ liệu.
	
26. CloudFront 
	- Orgin (Source) có thể là S3, EC2 hoặc ELB hoặc với bất kỳ custom HTTP nào ??
		
	- Mối liên hệ giữa CloudF và API trong PWA -> Origin của CF trỏ trực tiếp đến API Gateway kèm KEYs được cung cấp
	- Với CF, có thể sử dụng CFFunctions và Lambda@Edge để distribute HTTP Request, 
		+ CFFunctions thì chỉ có thể sử dụng Java	
		+ Lambda@Edge thì Node.js và Python
	- OriginShield ?? Nhanh hơn, cache xịn hơn

	- Tại sao có thể cho phép chọn lên đến 25 origins ?? Vì tương ứng với mỗi orgin lại có 1 behaviour khác nhau
	- Origin Protocol:
		+ HTTPS
		+ HTTP
		+ Match Viewer: HTTP or HTTPS
		

27. AWS PrivateLink  (Endpoint service trong VPC)
	-> AWS PrivateLink provides private connectivity between VPCs, AWS services, and your on-premises networks, 
	-> without exposing your traffic to the public internet
	
28. Resource Group: Group lại các resource (ví dụ như EC2) theo tags
	
29. ECS:
	Tạo 1 ECS Cluster bao gồm có thể là:
		- Networking Only
		- EC2 Linux + Networking
		- EC2 Windows + Networking
	-> Nó sẽ đẻ ra 1 ECS instance = ngang với 1 EC2 
	
	Tiếp đến, Task Definition là cần thiết để chạy Docker container trong ECS, nó sẽ:
		- Định nghĩa Docker image nào để dùng với mỗi container
		- How much CPU, memory to use with each task
		- Launch type ...v...
	-> Đính nghĩa 1 Task, tiếp đấy sử dụng:
	
	Service: Run and maitains desired number of tasks from a specified task definition
	-> Nhân lên
	
	a. To deploy applications on Amazon ECS, your application components must be architected to run in containers. 
		A container is a standardized unit of software development that contains everything that your software application needs to run, 
		including relevant code, runtime, system tools, and system libraries. 
		Containers are created from a read-only template called an image.
	
	b. Amazon Elastic Container Registry (ECR). Giống như Git, tuy nhiên lại sử dụng để quản lý image thay vì code :))
		Có thể cài đặt, login vào ECR của 1 container -> Pull image -> Sử dụng image này để tạo Task Definition
		
	Tại sao container lại quan trọng ?
	
	Case-study của 1 ứng dụng ECS
	
	MicroService ? 
		-> Lquan với nhau qua serivce discovery
	Dùng Fargate để quản lý hạ tầng của container mà ko cần care nó chạy như nào
	
	Docker 
		-> tạo chứa, quản lý và chạy container
		
	APplication Source code -> Build Image -> ECR -> Upload service -> ECS
	
	Bình thường thì dùng EC2 để chạy Container, tuy nhiên nếu ko muốn quản lý tài nguyên EC2, paching các kiểu thì cứ giao hết cho Fargate
		
	
30. NAT
	-> NAT-Gateway must stay in public subnet -> mà public subnet thì phải có Internet gateway 
	-> Cái này là khi tạo NAT, phải chỉ định public subnet cho nó. Mà public subnet là thế nào thì biết rồi đấy.
	-> Tiếp theo khi dùng thì ở route table, add NAT vào. Thường là route table của private subnet.
	Nhiều EC2 thì cần nhiều NAT instance(s) để trỏ đến. 1 con -> gây ra bottleneck
	
31. 

		
	Directory Service
	
	
	Transfer Family
	DHCP ko thể modify, chỉ có thể tạo 1 set mới rồi associated nó với VPCKinesis, S3, Athena -> xử lý clickstream data
	
	
33. ACM
	- Chỉ intergate dc với các service của AWS, ko download dc (down dc, dùng CLI, tuy nhiên ko có private key) nên ko xài dc cho các dịch vụ ngoài, tiêu biểu như ngnix
	

34. Artifact

35. Resource Access Manager
	- Tạo ra resource để share hoặc view shared resources
	

		
37. Elastic Transcoder
	a. Transcode Video
	b. Pipeline -> Job (Chọn Preset) -> Out
	
38. Organization
	a. Service Control Policy:
		- Chỉ áp dụng cho account bên trong organization.
		- Ko áp dụng cho account ngoài, nên nếu set IAM cho account B ngoài organization thì nó vẫn truy cập dc vào 
		- Sử dụng khi tổ chức có quá nhiều nhân viên, sẽ qua service này để đánh giá và phân role phù hợp, đang hiểu thế...
		- Ko áp dụng dc cho master account 
		
	b. Organization UNIT (OU)
		- Set SCP cho UNIT level thì nó sẽ áp dụng cho tất cả account bên trong ấy với higher priority
	
39. Inspector
	a. Có 2 đánh giá là Network và Host assessment
	b. Inspector Agent phải cài vào instance
	
40. Microsoft AD - Active Directory
	a. Domain Controller là 1 server chạy AD 
	b. AD là 1 service chứa các object như user hoặc computer, là 1 database chứa configuration của user và computer trong 1 AD domain
	c. Dynamic Host Configuration Protocol (DHCP) provides a standard for passing configuration information to hosts on a TCP/IP network.
	The options field of an DHCP message contains configuration parameters, including the domain name, domain name server, and the netbios-node-type.
	-> Nó là 1 service, khi dc tạo ra trong VPC, thì cũng thuộc 1 dải subnet và có security group riêng.
	d. Người dùng có thể đăng nhập vào các EC2 và user được cấp, qua DNS mà ko cần key 
	Có 3 loại AD:
	e. Simple AD
		- Used to back up via daily automated snapshot with point-in-time recovery enabled.
	f. Microsoft Managed AD
		- Deploy qua VPC, và Multi A-z đảm bảo high availability 
		- Có thể intergate với các service khác dc, seemless join EC2 instance 
		- Có thể intergate với on-premise sử dụng two way forest trust và Direct Connect
		- AD Replication 
			-> Cách duy nhất là setup 1 AD on EC2 windows instance trung gian giữa on premise và MM AD 
	g. AD Connector 
		- 1 gateway để on-premise access AD trên AWS như các gateway khác
		- bắt buộc phải có VPN hoặc Direct Connect
		- Ko thể seemless join, cache hoặc MFA
	
	
41. Kinesis
	a. Amazon Kinesis Data Streams is a scalable and durable real-time data streaming service
	
		Suppose an application is running on the EC2 Instance and it is generating continuous logs.
		Those logs will be pushed into the Kinesis Data Streams.
		From the Kinesis Data Streams, it gets consumed through the Kinesis Firehose.
		The data from Kinesis Firehouse is then saved into the S3 Bucket.
	
	b. Stream dữ liệu này sau đấy có thể dc gửi vào S3, Redshift hoặc ElasticSearch. 
	
	c. Kinesis Data Firehouse là 1 ETL service như Glue. Xử lý, transform dữ liệu sau đó chuyển đển S3 hoặc các dịch vụ tương ứng
	
	d. Kinesis Agent là 1 ứng dụng = java để gửi dữ liệu để FireHouse
	
		Kinesis Data Streams focuses on ingesting and storing data streams.
		Kinesis Data Firehose focuses on delivering data streams to select destinations.
		Both can ingest data streams but the deciding factor in which to use depends on where your streamed data should go to.

42. Amazon AppStream 2.0

	a. is focused on hosting individual applications on AWS

43. Amazon WorkSpaces 

	a. creates virtual desktops that can be used to create entire working environments for you and your team
	b. Images: softwares và setting của workspace đó
	c. Bundles: bao gồm image + cấu hình hardware của workspace đó
	d. Sau khi tạo workspace xong -> gửi invite đến người dùng -> sử dụng

44. Database Migragion Service
	a. Flow:
	-> Allocate a replication instance có trách nhiệm process quá trình migration này (allocate chứ ko phải tạo 1 EC2 nhé)
	-> Chỉ định sourve và target database
	-> Tạo task hoặc set of task để định nghĩa bảng hoặc quy trình chuyển
	
45. IPv6
	a. Các bước để thêm IPv6 vào 1 VPC đã có sẵn
	-> Thêm Ipv6 CIDR Block vào VPC và Subnet
	-> Update Route table
	-> Change instance type
	-> Gán IPv6 vào instance
	-> 
	
46. Element MediaLive, MediaPackage
	- xử lý live video và tạo các video stream formated để có thể chạy dc trên các thiết bị như TV, smartphone v..v..
	
47. Kinesis Video Streaming
	- Sử dụng GetMedia để lấy Kinesis Video Stream, tuy nhiên đối với các 3rd party player thì sử dụng GetHLSStreamingSession
	- 

48. Backup 
	Các dịch vụ có thể sử dụng:
	AWS Backup supports Amazon S3 (Preview), 
	Amazon EBS, 
	Amazon RDS including Amazon Aurora, Amazon DynamoDB, 
	Amazon Neptune, Amazon DocumentDB (with MongoDB compatibility), 
	Amazon EFS, 
	Amazon FSx for Lustre and 
	Windows File Server, 
	Amazon EC2, and 
	AWS Storage Gateway, enabling you to back up key data stores, such as your buckets (preview) and volumes, databases, and file systems

49. Managed BlockChain 
	a. Khi mới tạo thì có tk initial、add mem mới bằng cách send invitation.
	
50. Athena
	a. Chỉ chơi vs S3
	b. Để query data trong S3, data ở  đây có thể từ CloudFront hoặc CW
	c. Sử dụng kết hợp với Crawler để auto fetch data daily hoặc specific time.
	
51. SES:
	- Có 2 chế độ: 
		+ Sandbox: Cả email gửi lẫn email nhận đều phải được verified trước khi gửi
		+ Production: Có thể gửi cho bất kỳ email nào, tuy nhiên email gửi vẫn phải được verifie.
	
51. Lex
52. EMR
53. SageMaker
54. Config
55. License Manager
56. DataSync

II. ---------------------------------------------------------- VPC ----------------------------------------------------------

1. VPC
	a. Bảo vệ 1 nhóm AWS resource trong 1 subnet 
	b. Load Balancer, NAT Instance nên để vào public subnet, để có thể đâm ra ngoài qua internet gateway (Sử dụng cho Lambda)
	c. NAT Instance (khi ko muốn kết nối trực tiếp từ NAT đến internet) để trong 2 zone khác nhau, phòng trường hợp 1 cái lăn ra chết
	d. Bastion/ VPN Instance kết nối đến các tài nguyên riêng tư từ internet, enable MFA để tăng cường bảo mật.
	g. VPC bị giới hạn trong 1 region, tức là ko span sang 1 region khác dc.
	h. Chọn No preference khi tạo VPC để span to AZs chứ k chỉ nằm trong 1 AZ. 
	i. Add service endpoint khi tạo để kết nối với S3 cũng như Dynamo DB
	k. Sự khác nhau giữa Service Endpoint và NAT (Nat đâm ra ngoài, trong khi SE kết nối với các service bên trong AWS như S3 và Dynamo để tiết kiệm)
	l. Enable DNS hostname trong VPC
		- Ví dụ: enable sẽ giúp 1 public EC2 có địa chỉ IP -> Public IPv4 DNS.  3.85.111.34 ->  ec2-3-85-111-34.compute-1.amazonaws.com
	b. NACL is stateless. You can cum in and also cum out with SG, but NO if NACL say so.
	d. Bastion host để kết nối vs các thành phần nằm trong private subnet. (Cần setting NACL inbound và outbound ?)
	e. VPC DNS Hostname 
	f. Mỗi instance EC2 được lưu trữ trên 1 physical machine thì được ngăn cách bởi hypervios nên ko thể làm j dc nhau và hack dc nhau 
	g. Dữ liệu dc mã hóa mới 256 bit AES  
	
2. Subnet: 
	a. (CIDR) the IPv4 block 192.168.100.0/22 represents the 1024 IPv4 addresses from 192.168.100.0 to 192.168.103.255.
	b. IPv6 block is fixed to /56
	c. khi đã tạo VPC rồi thì ko alter CIDR range dc, chỉ có cách tạo 1 VPC mới sau đó migrate cũ lên." 
		-> Cũ rồi, h người ta có thể add thêm CIDR range r nhé zzz
	d. Subnet có 3 loại: public (có internet gateway), private (có nat) và VPN-only subnet (sử dụng khi connect on-premise vs VPC, có internet gateway)
	e. Hoặc cũng có thể tạo subnet cho từng workload (dep envr or product envr)
	f. Subnet giới hạn trong 1 AZs -> đồng nghĩa với 1 AZs, phải khởi tạo 1 subnet riêng
	g. Cần chú ý khi khởi tạo VPC -> subnet tạo ra chỉ giới hạn trong range của VPC
	h. first four and last IP mỗi subnet are reserved (cannot use) 10.0.0.1,2,3 and 255.
	
		
	Example: Để có 1 public subnet
		  + Cần 1 route table có igw 0.0.0.0/0 
		  + Associate thằng subnet cần public đó vào
 	
3. Route Table:
	a. Store route để foward packet tới 1 destination. 
	b. The routate 0.0.0.0/0 for all IPv4 ko thể cater vs destination of all IPvs6 -> add another entry ::/0 cho IPv6
	
	Internet Gateway: 1 phần của VPC, allows VPC to communicate với internet
		10.0.0.0.16 			- Local (internal routing within VPC)
		2011:dc8:1234:1c00::/56 - Local (internal routing within VPC)
		172.31.0.0/16			- pcx-1d2e1f2c (VPC peering, đâm sang 1 VPC khác)		
		0.0.0.0/0 				- igw-11222 (Allowing all trafic to go to the Internet Gateway)
	
4. Network Address Translation (NAT)
	a. Open traffic to internet of an instance from private subnet (1 chiều). The internet cannot initiate a connection backward.
	b. Nat Instance no more. 
	c. NAT chỉ hỗ trợ IPv4

5. Security Group:
	a. MySQL/ Aurora: 3306
	b. Apply ở tầng instance, not subnet level
	c. By default, allow all outbound traffic. Bởi vì anh là stateful, k phải stateless
	d. Có thể đặt source của SG là 1 SG khác
	
6. Network Access Control List: (Network ACLs)
	a. Tương tự như Security Group - tuy nhiên hoạt động ở tầng subnet như 1 firewall, còn Security Group apply ở instance hoặc zone level (IP range, SG, instance v...)
	b. Max rule là 32766
	c. NACL là stateless inbound and outbound rules trong khi Security Groups lại là stateful. 
	d. NACL hỗ trợ deny rule trong khi SG chỉ hỗ trợ allow (ko allow nghĩa là ko cho phép)
	
=> SG sẽ dùng để allow connection giữa các insntace trong khi NACL sẽ dùng để block connection giữa các subnet
=> TỐI QUAN TRỌNG: Mặc định các subnet nằm trong route table đã dc route có thể communicate dc với nhau (10.0.0.16 - local)
   Tuy nhiên nếu ko mở security group thì cho dù 2 instance nằm trong cùng 1 subnet cũng ko thể communicate dc với nhau. 

	
7. Amazon VPC Peering: 
	a. Kết nối nhiều VPC lại với nhau (chỉ trong 1 region). Và với VPC trong tài khoản khác
	2021 (Update)
	b. Trong khi VPC Peering chỉ có thể kết nối 2 VPC thì transit gateway có thể kết nối đến 5 VPC, tuy nhiên giá thì VPC Peering rẻ hơn và chỉ tính theo dung lượng truyền qua chứ ko theo thời gian như VPC Peering.
	c. Kết nối xong how to connect vs nhau (trường hợp cùng CIDR nữa thì sao ?? )
	
	VPC Endpint sử dụng cho cả SNS, SQS, SES ???
	

III. ---------------------------------------------------------- VPN ----------------------------------------------------------

1. Virtual Private Network
	a. Virtual Private Gateway 
		- Is the AmZ VPC side of VPN connection. (does not invole the internet when there is need to ensure that traffic flows through both environment)
		- Là 1 gateway của VPN (giống như Internet Gateway) 
		- Khi tạo xong cũng sẽ add vào 1 route table tương ứng với các subnet đc cho phép
		- Static hay Dynamic ? BGP (Border Gateway Protocol)
			-> Specific dynamic nếu Customer Gateway hỗ trợ và BGP và ngược lại, static
			-> Nên sử dụng -> tăng roburstness, hỗ trợ failover nếu 1 tunnel chớt
			-> Thiết bị ko hỗ trợ BGP sẽ phải sử dụng healthcheck để thực hiện failover
	b. Customer Gateway nó lại là 1 thiết bị hoặc application ở customer's side.
		- Dynamic/ Static Routing ??
	c. VPN Tunnel chính là khi traffic từ 2 bên được thông với nhau
	
	-> Multpiple CGW có thể có thể có riêng 1 VPN connection để 1 VPW (many-to-1 design)
	-> Điều này đảm bảo tính high availability của VPN Connection  
	
	d. Site-to-side VPN Connection ~ VPN Connection 
		- Chính là quy trình thiết lập VPN Tunnel bằng cách khai báo VGW và CW đã khởi tạo từ trước
	-> Thực hành: https://www.bogotobogo.com/DevOps/AWS/aws-VPN-Connections-Virtual-Private-Gateways.php
	
	e. Direct Connect
		- Thiết lập kết nối trực tiếp từ data center đến VPC 
		- Tạo 1 connection request từ AWS
		- Mạng của customer phải dc cung cấp bởi 1 internet provider kết nối với AWS Direct Connect
		- Client donwload cái request này, accept -> establish connection tới AWS 
	-> Thực hành ?
		- Direct Connect có thể reuse để sử dụng cho nhiều VPC của nhiều region khác nhau, chỉ việc tạo VPN Gateway để nó trỏ vào là dc
		
	f. Storage Gateway 
	-> Đại khái là ổ ảo mà on-premise cũng có thể truy cập được
		+ cached mode: lưu dữ liệu chính trên s3 và những dữ liệu thường xuyên sẽ dc lưu ở cache (locally). Max là 1024 TB
		+ stored mode: lưu dữ liệu chính ở locally, trong khi async backed up to AWS. max là 512TB
		+ Gateway virtual tape library: chuyên sử dụng đẻ backup và cost-effective vl.
	
	
2. PrivateLink ~ VPC Endpoint
	- PrivateLink uses elastic network interfaces within the client VPC so that there are no IP address conflicts with the service provider.
	 Types:
	a. VPC Endpoint
	   Enables you to privately connect your VPC to supported AWS services. Types:
		- Gateway Endpoint
		- Interface Endpoint
		- Gateway Load Balancer Endpoint
	-> 1 Ví dụ đơn giản, dễ hiểu là 1 instance EC2 nằm trong private subnet ko thể truy cập dc S3. 
	-> Chỉ cần tạo 1 gateway Endpoint trỏ đến S3 và add endpoint này vào route table chung của private subnet đó -> Ez access.
	
	b. Endpoint service:
		Your own application or service in your VPC.
	-> Thực hành: https://docs.aws.amazon.com/vpc/latest/userguide/vpc-peer-region-example.html
		
	- Giúp nhiều VPC trong cùng 1 account và 1 region chia sẻ 1 Direct Connect
	
	c. IPsec Protocol ?
		- Internet Protocol Security (IPsec) is a secure network protocol suite that authenticates and encrypts the packets of data 
		- To provide secure encrypted communication between two computers over an Internet Protocol network. 
		- It is used in virtual private networks
		
3. VPC Endpoint:
	a. Hiện tại chỉ hỗ trợ cho S3 và DynamoDB. Sử dụng để kết nối đến S3 hoặc DynamoDB mà ko phải chạy ra rồi chạy ngoài
	b. Private connect ngay bên trong AWS 
	c. Tạo 1 entry trong route table cho private subnet -> thẳng VPC Endpoint cho S3 hoặc Dynamo
	d. Đại khái là 1 phần tử năm trong private subnet. Route table sẽ associated subnet nào cần sử dụng đến endpoint này
	e. VPC Enpoint always takes precedence over NAT-Gateway and Internet-gateway
	f. VPC Endpoint Service. 
		- Tạo luôn 1 ứng dụng trong VPC. Các AWSer khác có thể truy cập app đó qua VPC Endpoint. Và bạn là người cung cấp service - qua LB.
	g. Sử dụng TLS
	
4. Site-to-site VPN vs Client VPN Endpoint
	a. 1 cái là site-to-site (1-1), 1 cái là client to site (n-1)
	b. Với sts thì cả 2 bên có thể communicate với nhau và có fixed IP
	c. Trong khi client thì chỉ là 1 client ví dụ như 1 laptop connect đến AWS và ko có 1 địa chỉ IP cố định

5. Client VPN Endpoints
	a. Client VPN Endpoint + Route53 Revolver đắt vl, 1 tháng 1 man tiền association hour. thôi bỏ bỏ, chuyển qua dùng 1 SSH vào RDS. Solution này chỉ dùng cho doanh nghiệp + nhiều tiền thôi
	b. Sử dụng để VPN vào 1 private VPC
	c. Cần DNS server (tạo ra từ Route Revolver để ăn dc tên của RDS -> truy cập theo host name, nếu ko thì chỉ có thể truy cập bằng IP)
	d. 	


IV. ---------------------------------------------------------- RDS ----------------------------------------------------------

0. RDS MySQL
	a. Standby instance (ko thể access dc) 

1. Aurora 
	a. compatible with MySQL và PostgreSQL 
	b. 6 different storage nodes in three different AZ
	c. Ko có định nghĩa standby database -> khi primary chết thì ông read replica lên thay ngay
	d. -> Rất nhah, gấp 5 lần SQL truyền thống vì read nó phủ thế mà
	e. Aurora có backtrack -> quay về thời điểm thay đổi trước. Chức năng này rất tốt để test những function cần remove v...v..

2. Redshift
	a. A data warehouse
	b. A data warehouse phân biệt đọc và phân tích dữ liệu (analytical and transaction workload) 
	c. Data reading bigger than writing and updating.
	d. Leader node và compute node
	e. Ledaer node đóng vao trò như 1 endpoint
	f. Khi nhận dc request thì leader node tiếp nhận và lên execution plan -> compute node phù hợp -> tính -> gửi ngc lại về leader node
	g. bên ngoài ko thể connect vs compute node mà phải qua leader node, tuy nhiên compute node lại có thể  talk with sv như S3
	h. Có 2 loại single node cluster và mutinode cluster
	i. Hỗ trợ mirror giữa các node, vậy nên đối vs dữ liệu 6Tb chỉ cần chọn 3 node dc1.8xlarge vs dung lượng 2.56TB.
	k. UNLOAD <> COPY
	l. Dense Store and Dense Compute`
	m. Serverless service.
	
3. DynamoDB
	a. For storing IOT sensor data or log ingestion
	- Phục vụ cho mục đích phân tích dữ liệu chưa hoàn chỉnh
	- Độ trễ thấp
	b. Dynamo sử dụng Gateway Endpoint
	c. Dynamo hỗ trợ tạo multi-active DB ở multi region
	d. Có thể kết hợp với DynamoDB Accelerator DAX để cache table request, tương tự như ElasticSearch
	
4. AWS Migration Service Tools
	Migrate an existing Mysql DB on an EC2 to a RDS instance.

	. Các RDS DB có thể snapshot ra S3, sau đó sử dụng Amazon Sagemaker, Amazon EMR, and Amazon Athena để phân tích dữ liệu
	. Aurora <=64 TB while Redshift -> Immortal
	. RDS not use to contain session
	. Dahell is DynamoDB Stream and Application Shard MySQL 
	. Using Redshift VPC Routing and S3 VPC Endpoint so Redshift can get data from S3 ???

III. ---------------------------------------------------------- Monitoring ----------------------------------------------------------

1. CloudWatch
	a. CloudWatch Event's rule (EventBridge's rule)
	b. Có thể sử dụng CloudWatch hoặc Lambda để scale up/down EBS ?
	- Dùng CloudWatch để monitor
	- Take a snapshot for backup purpose
	- Expand sử dụng Lambda -> Gọi 1 AWS Steps Function
	- Extend the file system (to take advantage of the additional storage)
	- Check the status to make sure the volume expanded and extended correctly.
	- Send email notification
	c. Có thể dùng CloudWatch subcription filter để deliver logs đến Lambda, Kinesis, OpenSearch
	
2. Config
	Khi config thay đổi
	
3. VPC Flow Logs Nằm trong EC2/ Network Interface
	- Có thể tạo cho subnet, network interface và VPC. Vấn đề là éo biết nó nằm ở đâu thôi ???

4. Money
	a. Cost Allocation Tag
	b. Resource Tag
	c. Cost Explorer 
	d. Billing Dashboard
	e. Service Quotas
		- Giới hạn của mỗi Services
	f. Trusted Advisor
		Đưa ra lời khuyên trên 5 category
		- Cost Optimization
		- Security
		- Fault Tolerance: Auto Scaling, Health Check v...value
		- Performance
		- Service Limits
	g. Cách ez nhất để view Billing là xuất ra S3 hết, ko có API hay SNS j xài dc ở đây cả.
		- Format của billing report là csv, ko có json j ở đây cả
		- Về report data thì billing có thể integrate với Athena, Redshift hoặc Quicksight để phân tích
		
5. Có thể install Cloudwatch Agent lên EC2 để quản lý: 
	Install Cloudwatch Agent trên Ubuntu:
		wget https://s3.amazonaws.com/amazoncloudwatch-agent/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm
		sudo rpm -U ./amazon-cloudwatch-agent.rpm
		
6. CloudTrail.
	a. Who made the request
	b. When was the request made
	c. What was the request about 
	d. Which resources  were acted upon in response to the request.
	e. Where was the request made from and made to.
	f. API, S3, Lambda 
	g. CloudTrail, log luôn luôn dc encript
	


VI. ---------------------------------------------------------- MIGRATION ----------------------------------------------------------



VII. ---------------------------------------------------------- OTHER KNOWLEDGES ----------------------------------------------------------

1. Cron expression
	1 cron exp bao gồm 6 thành phần sau: 
	<minute> <hour> <day-of-month> <month> <day-of-week> <command>
	a. 0 12 * * ? --> 12h trưa mọi ngày
	b. 0/5 13,18 * * ? --> cứ cách 5 phút từ 13-14h và 18-19h
	c. 0-5 13 * * ? --> 13h đến 13:05 
	d. 15,43 13 ? 6 Tue -> 
	
2. Tagging
	Tag sau đó sử dụng Resources Group để nhóm các resource có chung tag
	
3. Overlya MultiCast
	Multicast is a network capability that allows one-to-many distribution of data. With multicasting one or more sources can transmit network packets to subscribers that typically reside within a multicast group. Multicast groups can have zero or more subscribers that wish to receive content from the sources
	https://aws.amazon.com/articles/overlay-multicast-in-amazon-virtual-private-cloud/


4. ML's services:
	- Translation: Dịch
	- Rekognition: Nhận diện ảnh
		+ Ngoài API SearchFaces, còn có API RecoginizeCelebrities to detect celeb - vãi lòn :v
		+ Flow của Rekognition sẽ là dư lày
		-> Kinesis Video Stream gửi streaming video tới Rekognition Video
		-> Rekognition Video sẽ xử lý cái stream này
		-> 1 Kinesis data stream consumer để phân tích kết quả mà Rekognition gửi đến Kinesis Data stream
	- Transcribe: Speech recognition

VIII. ---------------------------------------------------------- FAQs ----------------------------------------------------------

1. ELB không thể point đến nhiều read to multiple replica, nhưng Route53 thì có thể

2. SAM - Serverless Application Model:
	Serverless::API => API Gateway trong CloudFormation
	Serverless::Function => Lambda
	
3. Lambda Cold Start giờ có thể sử dụng provisioned concurency để xử lý. Ko cần phải dùng Cloudwatch event nữa.

4. 
	AWSRunPowerShellScript -> Cho window
	AWSRunShellScript -> Cho Linux
	
5. HTTPD -> Apache HTTP Server

6. Default key policy của 1 KMS là root hoặc là bất kỳ 1 thằng nào đó. Nếu đã xóa user ấy rồi thì phải liên hệ AWS Support, chứ ko tự sửa dc. Ngay cả root user cũng chịu

7. Fixed MAC address luôn đi cùng 1 ENI

8. TCP là 1 phương thức kết nối giữa client và server trong khi HTTP/HTTPS là phương thức kết nối giữa client/server. Với TCP, target có thể là 1 EC2, continer hoặc IP Address
	SSH và MySQL sử dụng 3306 cũng là 1 giao thực thuộc TCP vậy nên khi allow ALL TCP thì mặc định có thể kết nối MYSQL và SSH vào instance 1 cách bình thường.
	

9. CIDR
	Địa chỉ IPv4 được chia thành 6 class khác nhau là A, B, C, D, E, Loopback mỗi class được quy định một  dải IP :
	a. Dải IP Class A : 1.0.0.1 126.0.0.0 (có thể viết 1-126)
	b. Dải IP Class B : 128.1.0.0 191.254.0.0(có thể viết 128 -191)
	c. Dải IP Class C : 192.0.1.0 223.255.254.0 (có thể viết 192-223)
	d. Dải IP Class D: 224.0.0.0 239.255.255.255(có thể viết 224-239)
	e. Dải IP Class E : 240.0.0.0 254.255.255.255(có thể viết 240-254)
	f. Dải IP Loopback : 127.0.0.0
	
	g. Tổng IP trong 1 subnet.
	Ví dụ, để tìm khoảng IP của "/ 29" tiền tố, chúng ta trừ đi tiền tố 29 từ 32. Kết quả 3 được sử dụng như là một số của 2. Do đó, phạm vi IP bạn nhận được là "2 đến lũy thừa của 3" tức là 8 IPs.
	
	h. Giả sử một khối địa chỉ IP có 64 địa chỉ được chia thành ba mạng con gồm 32, 16 và 16 địa chỉ. Mặt nạ của địa chỉ sẽ là "/ 26". Tuy nhiên, các mạng con sẽ có mặt nạ mạng con riêng của chúng.
		+ Mạng con thứ nhất gồm 32 địa chỉ sẽ có mặt nạ mạng con "/ 27" (nghĩa là 2 đến điện 5).
		+ Mạng con thứ hai gồm 16 địa chỉ sẽ có mặt nạ mạng con "/ 28" (nghĩa là 2 đến nguồn 4).
		+ Thứ ba subnet chứa 16 địa chỉ sẽ có subnet mask của "/ 28" (nghĩa là 2 đến sức mạnh 4).
	Do đó, một khối địa chỉ của 64 địa chỉ IP được chia thành ba khối 32, 16 và 16 địa chỉ mỗi.
	
	/32 - 1
	/31 - 2
	/30 - 4
	/29 - 8
	/28 - 16
	/27 - 32
	/26 - 64
	/25 - 128
	/24 - 254
	/23 - 510
	/22 - 1022
	/21 - 2046
	/20 - 4094
	/19 - 8190
	/18 - 16382
	/17 - 32766
	/16 - 65536
	
	
	
10. HSM - Hardware Security Module
	1 hệ thống phần cứng dùng để tạo ra, quản lý và bảo vệ key. 
	
11. HTTPS 
	- Có thể đăng kí SSL certificate từ các nhà cung cấp, hoặc tự tạo ra.
	-> Tuy nhiên browser sẽ ko xác định được SSL này, nên sẽ hiển thị cảnh bảo và người dùng có muốn chấp nhận rủi ro khi truy cập ko!
	- 
	
12. IDS/ IPS
	- Intrusion detection system / Intrusion prevention system
	-> 1 cái phát hiện và 1 cái take action (deny hoặc allow)
	
13. TCP và HTTPS
	- TCP listener relay request to the backend instance với nguyên trạng.
	- Trong khi HTTPS thì connection dc terminated ở ELB khi chưa kịp đến webserver.
	
14. 
	integrity: tính chính xác của thông tin
	promiscuous: lăng nhằng
	
15. 
	G3 instance (high graphical processing server with low latency network) 
	C3 instance (ngược lại với đồ họa thì đây là instance tối ưu compute)
	
16. 
	Pipeline: Thường đi với automated accesssment
	Step Function: Có thể có human interaction dây vào.
	
17. Single Root I/O: SR I/O - The short answer is that SR-IOV is a specification that allows a PCIe device to appear to be multiple separate physical PCIe devices
	Nôm na, sử dung SR I/O có thể archive dc higher network throughput.

18. 
	HTTP HEADER:
		+ X-forward-for: 1 header chứa IP từ original
		+ X-forward-Proto: Xác định protocol
	
19. State Manager và Maintenance Window có thể sử dụng để install script lên các instance 

20. Nếu manually gắn 1 EC2 vào ELB thì có thể break communication.

21. 
	RTO ?  Recovery Time Objective - How much time loss can u afford ?
	RPO ? Recovery Point Objective - How much time loss can u afford ?
	
22. Khi 1 application chạy trong 1 EC2 (EC2 này đã dc assign role để access 1 resource j đó, S3 chẳng hạn). Để application có thể execute code tương tác với resource thì nó phải nhận temporary security credential từ EC2 instance metadata. 


IX. ---------------------------------------------------------- PRACTICE ----------------------------------------------------------

1. Tạo RSA key
	- cd easyrdsa3
	- ./easyrsa init-pki
	- ./easyrsa build-ca nopass
	- ./easyrsa build-server-full server nopass
	- ./easyrsa build-client-full client1.domain.tld nopass
	https://dev.classmethod.jp/articles/manage-aws-client-vpn-client-certificates/
	https://github.com/OpenVPN/easy-rsa
	
2. EC2 Details
	#!/bin/bash
	sudo su
	yum update -y
	yum install httpd -y
	systemctl start httpd
	systemctl enable httpd
	echo "REQUEST HANDLING BY SERVER 1" > /var/www/html/index.html
	
3. SSH
	chmod 400 web-serverkey.pem
	sudo ssh -i Jula-Private-Seoul.pem  ec2-user@10.0.4.12
	
5. Linux Install Mysql 
	yum install mysql -y
	mysql -h test.cnxb7nzas8z3.ap-northeast-2.rds.amazonaws.com -u admin -p

* Sử dụng externalID khi assumeRole để tăng bảo mật khi đưa quyền cho 3rd party tool ?

* Sử dụng Resources Group để tạo các group resource và sau đấy dùng System Manager để quản lý, ví dụ như install Apache đồng loạt

* Network LB vs Application LB:
	- Test HTTPS và TLS
 
* Lambda có thể kết hợp với EventBridge để xử lý response
	- Này chính là cái CloudWatch Event' Rule để chạy Lambda hằng ngày hoặc khi cần bắn event j đó đấy ...* (Fargate/EC2) - Batch 
	
 
* Mesh VPN 
	-> Chính là peer-to-peer network.	
	
* Test ClientVPN kết nối với only RDS hoặc nguyên cái VPC ?
	-> Vì sao ko dùng ClientVPN để access tới website luôn mà phải set WAF qua IP
	-> Đơn giản vì giá của Client VPN rất mắc, trong khi CloudFront kết hợp với WAF lại rất rẻ.
	-> Mỗi Client VPN chỉ có thể associate với 1 subnet trong 1 AZ, ko thể associate với nhiều subnets của 1 AZ dc.
	-> Cái target associate thì để cái méo j cũng dc cơ mà cái authorization mới là để xem thằng clientVPN này có thể access dc vào subnet nào

* Khi SSH từ 1 EC2 này sang 1 EC2 khác, để tạo key trên EC2 mới, thì phải copy content của key ấy ra notepad rồi vi vào, tuy nhiên nó sẽ bị thiếu mất mấy chữ BEGIN ở đâu -> Check cẩn thận content key mới	
	
* Test NAT
	https://aws.amazon.com/premiumsupport/knowledge-center/nat-gateway-vpc-private-subnet/

* VPC Peering và Transit Gateway kết nối với nhau thì qua IP như nào ?

* S3 Retrist Access
	https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-dg.pdf
	- Ví dụ dễ hiểu nhất là userA muốn truy cập S3 bucket trong account của userB
	-> Có 2 cách để thực hiện điều này:
		+ userA assume role của userB -> userA phải giveup toàn bộ quyền của userA trong khi assuming role của userB 
		+ S3 bucket của userB có bucketPoilicy allow userA có thể truy cập I/O (resource base policies) 
	

	
* Practice IAM 
	https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-saml.html
	
	STS 
	https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html
	-> gọi API assumeRole lên STS
	- How to switch role ?
	- MFA có thể add vào 1 role
	Sử dụng external ID để chặn confused deputy attach (Mạo danh ARN của accound cung cấp resource)
	
	1 flow:
		a. Login vào application (identity broker)
		b. Nhận được IAM role tương ứng (Cognito)
		c. Call đến STS (Security Token Service) để assume that role
		4. Nhận được temporary credential từ STS 
		5. Login vào AWS 
		
	
	
* Kubernetes

* Single Sign-on SSO
	Kết hợp với AD

* Share resource qua cross account
	- AssumeRole các kiểu
	- SharedEventID và UserIdentify khi 1 thằng xóa bucket từ 1 thằng khác
	- ExternalID
	- AssumeRole giữa nhiều account, cách switch role 

* CloudHSM

* Provisioned IOPS for RDS: 
	https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html

* Khi tạo VPN, add route vào main table thì destination là IP của CustomerGateway ?

* Practice:
	Ứng dụng C# bên trong Ec2. phải assumeRole hay j đó chứ k thể như thể lấy luôn quyền EC2 dc ???
	

* Học Cloud Formation & OpsWork
	- CreatePolicy
	- Wait Condition các kiểu: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-waitcondition.html
	- Nên thực hành về  OpsWorks (Chef, Puppet, Stack) 
	- Mối liên hệ giữa OpsWork và CloudFormation
	- CloudFormation deletion policy
	- Da hell is Cloud Formation Drift Detection drift ??
	- CloudFormation StackSet ? -> tạo role cho target account trong Organization
	
Lúc nào cũng đã có 2 tunnel giữa customer gateway và virtual private gateway ?

CloudFormation
	Intrinsic funtion: Assign value to properties mà hiện tại chưa có until runtime.
	
* Kinesis
	Amazon Kinesis, build ứng dụng realtime, near realtime, troubleshoot Kinesis agent
	
* Migration:
	Server Migration Service
	Migration Hub
	Virtual Tape Backup
	Các bước import app to AWS
	- Sử dụng VM Import để import current VM -> ready to use EC2
	Migration: Application Discovery Service, phân biệt Agent-less và Agent-based, sử dụng DMS + SCT để migrate database, SMS để replicate server giảm thiểu downtime
	
* Global Accelerator
	https://docs.aws.amazon.com/global-accelerator/latest/dg/getting-started.html
	
* Tại sao mặc định các subnet có thể communicate với nhau, nhưng lại cần Security Group ?
	
* IAM Task - Container
	 Tạo IAM Role cho 1 task trong 1 container.
	 
* Method Request và Integration Request trong API Gateway

* HVM. Hardware 
  PVM. Ảo hóa
  
* Mongo là partner của AWS. Nên có thể migrate lên AWS sử dụng
	https://aws.amazon.com/quickstart/architecture/mongodb-atlas/

* RDS on VMWare
	- Để sử dụng RDS trên VMWare
	-> Tạo 1 custom AZ 
	-> Tạo RDS trên custom AZ này (on premise)
	-> Từ Console, có thể tạo read replica cho RDS này 
	
* EBS encryption 
	- 1 kiểu mã hóa gắn vào EBS đảm bảo những dữ liệu sau đây sẽ dc mã hóa bao gồm:
		+ data at rest (trong EBS)
		+ data transit between EBS và instance
		+ snapshot tạo ra từ volume
		+ volume tạo ra từ snapshot
		
* Config Auto Scaling to watch SQS Queue

LAG tối đa chỉ chứa dc 4 connections

X. ---------------------------------------------------------- GENERAL WTFs ----------------------------------------------------------


https://sqs.us-east-1.amazonaws.com/438887108678/Whizlabs-sqs
https://developer.mozilla.org/en-US/docs/Web/API/Navigator/appVersion
https://www.zaikei.co.jp/article/20210916/639190.html
https://developers-jp.googleblog.com/2021/09/chrome-user-agent.html
https://web.dev/migrate-to-ua-ch/
https://web.dev/user-agent-client-hints/
https://forest.watch.impress.co.jp/docs/digest/1360051.html
https://developer.mozilla.org/en-US/docs/Glossary/Client_hints
 
EC2 Image Builders
CloudHSM
Amazon BlockChain Template
AWS Polly Lexicon 
Resource sharing
Application Shard MySQL
Amazon ES, ELK stack
ACM, SSM Parameter Store…
SageMaker, 
AWS SAP
aWS Stream 
WorkDocs
ADConnector
FSx
Shield
Security HUB
Macie

Service Catalog

Control Tower

Compute
Optimizer
Docker 
ML
	Lex
	EMR
	SageMaker
	Config
	License Manager
	DataSync
	
Forecast
	
	Comprehend
AppSync
AppStream
AD
	Workspaces
Neptune
ECR
Outposts
Alexa
MQ

Sing Work Flow ?
file-level restore ?
Có thể sử dụng HSM Hardware Security Module để manage top level encription keys. ?? Redshift
- Batch có thể dùng để scheduly phân tích dữ liệu từ S3
- BeanStalk and Docker relationship ??
Docker
CloudFormation
AWS Data Lifecycle Management
Hadoop

